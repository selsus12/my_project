{"remainingRequest":"C:\\Users\\Sele\\Desktop\\my-project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sele\\Desktop\\my-project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Sele\\Desktop\\my-project\\src\\shared\\logging-mixins.js","dependencies":[{"path":"C:\\Users\\Sele\\Desktop\\my-project\\src\\shared\\logging-mixins.js","mtime":1609523018602},{"path":"C:\\Users\\Sele\\Desktop\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sele\\Desktop\\my-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sele\\Desktop\\my-project\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { logger } from \"./logger\";\nvar hookMessageSuffix = 'hook called (from mixin)';\nexport var lifecycleHooks = {\n  // Computeds\n  computed: {\n    componentName: function componentName() {\n      return \"\".concat(this.$options.name, \" component\");\n    }\n  },\n  // LifeCycle Hooks\n  created: function created() {\n    logger.info(\"\".concat(this.componentName, \" created \").concat(hookMessageSuffix));\n    logger.info('component data', this.$data);\n  },\n  mounted: function mounted() {\n    logger.info(\"\".concat(this.componentName, \" mounted \").concat(hookMessageSuffix));\n  },\n  updated: function updated() {\n    logger.info(\"\".concat(this.componentName, \" updated \").concat(hookMessageSuffix));\n  },\n  destroyed: function destroyed() {\n    logger.info(\"\".concat(this.componentName, \" destroyed \").concat(hookMessageSuffix));\n  }\n};\nexport var heroWatchers = {\n  // Watchers\n  watch: {\n    selectedHero: {\n      immediate: true,\n      deep: true,\n      handler: function handler(newValue, oldValue) {\n        logger.info('old values', oldValue);\n        logger.info('new values', newValue);\n      }\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\Sele\\Desktop\\my-project\\src\\shared\\logging-mixins.js"],"names":["logger","hookMessageSuffix","lifecycleHooks","computed","componentName","$options","name","created","info","$data","mounted","updated","destroyed","heroWatchers","watch","selectedHero","immediate","deep","handler","newValue","oldValue"],"mappings":";AAAA,SAASA,MAAT;AAEA,IAAMC,iBAAiB,GAAG,0BAA1B;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aADQ,2BACQ;AACd,uBAAU,KAAKC,QAAL,CAAcC,IAAxB;AACD;AAHO,GAFkB;AAO5B;AACAC,EAAAA,OAR4B,qBAQlB;AACRP,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACAD,IAAAA,MAAM,CAACQ,IAAP,CAAY,gBAAZ,EAA8B,KAAKC,KAAnC;AACD,GAX2B;AAY5BC,EAAAA,OAZ4B,qBAYlB;AACRV,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACD,GAd2B;AAe5BU,EAAAA,OAf4B,qBAelB;AACRX,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,sBAA6CH,iBAA7C;AACD,GAjB2B;AAkB5BW,EAAAA,SAlB4B,uBAkBhB;AACVZ,IAAAA,MAAM,CAACQ,IAAP,WAAe,KAAKJ,aAApB,wBAA+CH,iBAA/C;AACD;AApB2B,CAAvB;AAuBP,OAAO,IAAMY,YAAY,GAAG;AAC1B;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE;AACZC,MAAAA,SAAS,EAAE,IADC;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,OAHY,mBAGJC,QAHI,EAGMC,QAHN,EAGgB;AAC1BpB,QAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BY,QAA1B;AACApB,QAAAA,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0BW,QAA1B;AACD;AANW;AADT;AAFmB,CAArB","sourcesContent":["import { logger } from './logger';\r\n\r\nconst hookMessageSuffix = 'hook called (from mixin)';\r\n\r\nexport const lifecycleHooks = {\r\n  // Computeds\r\n  computed: {\r\n    componentName() {\r\n      return `${this.$options.name} component`;\r\n    },\r\n  },\r\n  // LifeCycle Hooks\r\n  created() {\r\n    logger.info(`${this.componentName} created ${hookMessageSuffix}`);\r\n    logger.info('component data', this.$data);\r\n  },\r\n  mounted() {\r\n    logger.info(`${this.componentName} mounted ${hookMessageSuffix}`);\r\n  },\r\n  updated() {\r\n    logger.info(`${this.componentName} updated ${hookMessageSuffix}`);\r\n  },\r\n  destroyed() {\r\n    logger.info(`${this.componentName} destroyed ${hookMessageSuffix}`);\r\n  },\r\n};\r\n\r\nexport const heroWatchers = {\r\n  // Watchers\r\n  watch: {\r\n    selectedHero: {\r\n      immediate: true,\r\n      deep: true,\r\n      handler(newValue, oldValue) {\r\n        logger.info('old values', oldValue);\r\n        logger.info('new values', newValue);\r\n      },\r\n    },\r\n  },\r\n};\r\n"]}]}